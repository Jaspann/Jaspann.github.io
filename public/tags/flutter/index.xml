<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flutter on William Parker&#39;s Personal Site</title>
    <link>http://localhost:1313/tags/flutter/</link>
    <description>Recent content in Flutter on William Parker&#39;s Personal Site</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>wiparker2020@gmail.com (William Parker)</managingEditor>
    <webMaster>wiparker2020@gmail.com (William Parker)</webMaster>
    <copyright>William Parker</copyright>
    <lastBuildDate>Wed, 19 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/flutter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mediapipe Pose Detection: Flutter Library</title>
      <link>http://localhost:1313/post/software-libraries/google-mediapipe-pose-detection/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate><author>wiparker2020@gmail.com (William Parker)</author>
      <guid>http://localhost:1313/post/software-libraries/google-mediapipe-pose-detection/</guid>
      <description>&lt;p&gt;&lt;em&gt;A Flutter library for pose detection using Google&amp;rsquo;s Mediapipe.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Before 2023, Google&amp;rsquo;s solution for machine learning (ML) on mobile was&#xA;&lt;a href=&#34;https://developers.google.com/ml-kit/&#34;&gt;ML Kit&lt;/a&gt;. The library was for Android and iOS&#xA;and had a variety of small models to perform common tasks that developers could use for&#xA;their apps. This was before LLMs took over the public mind, so the platform heavily focused&#xA;on computer vision for tasks like facial detection and image labeling.&#xA;The library was well received by many developers and the developer community was even&#xA;interested enough in the library that it was ported to Flutter for&#xA;iOS and Android as &lt;a href=&#34;https://pub.dev/packages/google_ml_kit&#34;&gt;google_ml_kit&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Peripheral BLE Library for Flutter</title>
      <link>http://localhost:1313/post/software-libraries/m-ble-peripheral/</link>
      <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate><author>wiparker2020@gmail.com (William Parker)</author>
      <guid>http://localhost:1313/post/software-libraries/m-ble-peripheral/</guid>
      <description>&lt;p&gt;&lt;em&gt;Developing a Flutter library with full BLE peripheral capabilities for iOS and Android&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;bluetooth-for-freemovevr&#34;&gt;Bluetooth For FreeMoveVR&lt;/h2&gt;&#xA;&lt;p&gt;Early on in the creation of FreeMoveVR, I knew I wanted the primary communication&#xA;method between the smartphone and computer to be over Bluetooth. I believed that&#xA;Bluetooth was the perfect solution for our use case because:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Everyone has Bluetooth on their phone, and it is a stable option for developers.&lt;/li&gt;&#xA;&lt;li&gt;FreeMoveVR needs to transfer a relatively small amount of data compared to something like streaming music to AirPods.&lt;/li&gt;&#xA;&lt;li&gt;It&amp;rsquo;s wireless, so there is less hassle setting up the program for the end user.&lt;/li&gt;&#xA;&lt;li&gt;It does not rely on Wi-Fi at all, which is good in cases like colleges where the protocols are very complex and locked down for students.&lt;/li&gt;&#xA;&lt;li&gt;BLE stands for Bluetooth Low Energy, so the implication is that the phone can do the main task of pose detection and spend minimal resources on data transfer.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;The most notable arguments against the other methods were that a wired connection would be hard to use given how the app works,&#xA;and that a Wi-Fi connection would be impossible to develop while on campus at SNHU.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
